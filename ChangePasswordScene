// Author: David Corrales Marco

import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import java.net.Socket;

import javafx.geometry.Pos;
import javafx.scene.Scene;
import javafx.scene.control.Button;
import javafx.scene.control.Label;
import javafx.scene.control.PasswordField;
import javafx.scene.control.TextField;
import javafx.scene.layout.BorderPane;
import javafx.scene.layout.GridPane;
import javafx.scene.layout.VBox;
import javafx.scene.text.Font;

public class ChangePasswordScene extends SceneBasic
{
	PasswordField textOld = new PasswordField();//old password textfield
	PasswordField textNew = new PasswordField();//new password textfield
	private Label errorLabel = new Label();
	private GridPane root;
	
	public ChangePasswordScene()
	{
		super("Change Password");
		Label title = new Label("Change Password");
		title.setFont(new Font(40));
		
		Label labelOld = new Label("Old Password: ");//label for old password texfield
		Label labelNew = new Label("New Password: ");//label for password textfield
		
		root = new GridPane();//container holding the labels and textfeilds for old password and new password
		root.setAlignment(Pos.CENTER);
		root.setVgap(10);
		root.setHgap(5);
		
		root.add(labelOld,0,0);
		root.add(labelNew,0,1);
		root.add(textOld,1,0);
		root.add(textNew,1,1);
		
		Button change = new Button("Change Password");//Change Password button
		change.setOnAction(e-> change());//sets change password button to test old password
		Button logout = new Button("Log Out");
		logout.setOnAction(e->SceneManager.setLoginScene());
		
		root.add(change, 0, 2);
		root.add(logout, 1, 2);
		root.add(quit, 2, 2);
		
		VBox vbox = new VBox(30, title, root);
		vbox.setAlignment(Pos.CENTER);
		
		BorderPane bp = new BorderPane(vbox);
		BorderPane.setAlignment(bp, Pos.CENTER);
		super.scene = new Scene(bp, 400, 300);
	}
	private void change() {
		
		try {
			Socket socket = SceneManager.getSocket();
			BufferedReader in = new BufferedReader(new InputStreamReader(socket.getInputStream()));
			PrintWriter out = new PrintWriter(SceneManager.getSocket().getOutputStream());
			
			out.println("CHANGE");
			out.println(textOld.getText());
			out.println(textNew.getText());
			out.flush();
			String message = in.readLine();
			
			if(message.equals("ADMIN")) {
				textOld.setText("");
				textNew.setText("");
				errorLabel = new Label("");
				SceneManager.setAdminScene();
			} else if(message.equals("CLIENT")) {
				textOld.setText("");
				textNew.setText("");
				errorLabel = new Label("");
				SceneManager.setClientScene();
			} else {
				errorLabel.setText(message);
				layout.getChildren().add(errorLabel);
			}
			
		} catch (Exception e) {
			errorLabel = new Label("error: "+(e.toString()));
			e.printStackTrace();
		}
	}
	

}
