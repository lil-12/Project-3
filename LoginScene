// Author: Lillian Davis

import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import java.net.Socket;

import javafx.geometry.Pos;
import javafx.scene.Scene;
import javafx.scene.control.Button;
import javafx.scene.control.Label;
import javafx.scene.control.PasswordField;
import javafx.scene.control.TextField;
import javafx.scene.layout.BorderPane;
import javafx.scene.layout.GridPane;
import javafx.scene.layout.VBox;
import javafx.scene.paint.Color;
import javafx.scene.text.Font;

public class LoginScene extends SceneBasic
{
	private TextField textU;//username textfield
	private PasswordField textP;//password textfield
	private Label errorLabel;//label that appears when an error occurs
	private GridPane root;//container holding the labels and textfeilds for username and password
	
	public LoginScene()
	{
		super("Login Menu");
		
		Label title = new Label("Login Scene");//large title for scene
		title.setFont(new Font(40));
		
		Button login = new Button("Login");//login button -> brings you to login scene, but does not cut connection
		Button settings = new Button("Settings");//brings you to settingsScene
		
		login.setOnAction(e-> 
		{	
			login();//sets login button to test tryU and tryP and log the user in
		});
		
		settings.setOnAction(e-> 
		{
			SceneManager.setSettingsScene();
			errorLabel.setText("");//sets the error label to blank so that it does not appear when you nect return to loginMenu
			errorLabel.setTextFill(Color.color(1,0,0));
		});
		
		Label labelU = new Label("	Username:		");//label for username texfield
		Label labelP = new Label("	Password: 		");//label for password textfield
		errorLabel = new Label("");
		textU = new TextField();
		textP = new PasswordField();
		
		root = new GridPane();
		root.add(labelU,1,0);
		root.add(labelP,1,1);
		root.add(textU,2,0);
		root.add(textP,2,1);
		root.add(login, 1, 3);
		root.add(settings, 2, 3);
		root.add(quit, 3, 3);//sets the SceneBasic quit (brings to loginScene and cuts connection) button to a location
		root.add(new Label("\t"), 0, 0);
		
		VBox vbox = new VBox(30, title, root,errorLabel);
		vbox.setAlignment(Pos.CENTER);
		
		BorderPane bp = new BorderPane(vbox);
		BorderPane.setAlignment(bp, Pos.CENTER);
		super.scene = new Scene(bp, 400, 300);
		
	}
	
	//tests the username and password entered by user. if they are valid, calls SceneManeger to set Stage to the ClientScene or AdminScene
	private void login()
	{
		try
		{
			Socket socket = SceneManager.getSocket();
			BufferedReader in = new BufferedReader(new InputStreamReader(socket.getInputStream()));
			PrintWriter out = new PrintWriter(SceneManager.getSocket().getOutputStream());
			out.println("LOGIN");//sends signal to server
			out.println(textU.getText());//sends entered username
			out.println(textP.getText());//sends entered password
			out.flush();
			String message = in.readLine();//signal from server
			if(message.equals("ADMIN"))
			{
				textU.setText("");
				textP.setText("");
				errorLabel.setText("");
				SceneManager.setAdminScene();//server says that an admin logged in, so goes to adminScene
			}
			else if(message.equals("CLIENT"))
			{
				textU.setText("");
				textP.setText("");
				errorLabel.setText("");
				SceneManager.setClientScene();//server says that an client logged in, so goes to adminScene
			}
			else
			{
				errorLabel.setText(message);//if pass or username are wrong, errorlabel prints the message sent by the server
			}
		}
		catch(Exception e)
		{
			errorLabel.setText("error: "+(e.toString()));//if an unknown or socket error has occured
			e.printStackTrace();
		}	
	}
}
