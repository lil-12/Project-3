/*Lily Davis
 * Project 3
 */
import static org.junit.jupiter.api.Assertions.*;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import java.net.ServerSocket;
import java.net.Socket;
import java.util.ArrayList;

import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;

class Test_login_JUnit 
{

	static Socket connection;
	static PrintWriter outgoing;
	static BufferedReader incoming;
	
	//connects to the server a new time before each test
	@BeforeEach
	void doThis()
	{
		try 
		{
			connection = new Socket("localhost",52431);
			System.out.println("Listening on port: " + 52431);
			outgoing = new PrintWriter(connection.getOutputStream());
			incoming = new BufferedReader(new InputStreamReader(connection.getInputStream()));
		}
		catch(Exception e)
		{
			e.printStackTrace();
		}
	}
	
	//tests that the server will correctly identify an administrator logging in and send the appropriate signal to the client
	@Test
	void testAdmin() 
	{
		outgoing.println("ldavis");//sends username
		outgoing.println("123456");//sends password
		outgoing.flush();
		String str="";
		try 
		{
			str = incoming.readLine();//signal from server
			outgoing.close();
			incoming.close();
		} 
		catch (IOException e) 
		{
			e.printStackTrace();
		}
		assert(str.equals("ADMIN"));		
	}
	
	//tests that the server will correctly identify a client logging in and send the appropriate signal to the client
	@Test
	void testClient() 
	{
		outgoing.println("client1");//sends username
		outgoing.println("12345");//sends password
		outgoing.flush();
		String str="";
		try 
		{
			str = incoming.readLine();//signal from server
		} 
		catch (IOException e) 
		{
			e.printStackTrace();
		}
		assert(str.equals("CLIENT"));
	}
	
	//tests that the server will correctly identify an incorrect username and send the appropriate signal to the client
	@Test
	void testUsernameError() 
	{
		outgoing.println("hey");//sends username
		outgoing.println("12345");//sends password
		outgoing.flush();
		String str="";
		try 
		{
			str=incoming.readLine();//signal from server
		} 
		catch (IOException e) 
		{
			e.printStackTrace();
		}
		System.out.println(str);
		assert(str.equals("error: Incorrect username"));
		
	}
	
	//tests that the server will correctly identify an incorrect password and send the appropriate signal to the client
	@Test
	void testPassError() 
	{
		outgoing.println("client1");//sends username
		outgoing.println("123");//sends password
		outgoing.flush();
		String str="";
		try 
		{
			str=incoming.readLine();//signal from server
		} 
		catch (IOException e) 
		{
			e.printStackTrace();
		}
		System.out.println(str);
		assert(str.equals("error: Incorrect password"));	
	}
}
